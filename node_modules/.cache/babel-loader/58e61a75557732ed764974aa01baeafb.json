{"ast":null,"code":"import _classCallCheck from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/src/components/map.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nvar mapStyles = {\n  map: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n};\nexport var CurrentLocation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CurrentLocation, _React$Component);\n\n  _createClass(CurrentLocation, [{\n    key: \"render\",\n    value: function render() {\n      var style = Object.assign({}, mapStyles.map);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: style,\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  function CurrentLocation(props) {\n    var _this;\n\n    _classCallCheck(this, CurrentLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrentLocation).call(this, props));\n    var _this$props$initialCe = _this.props.initialCenter,\n        lat = _this$props$initialCe.lat,\n        lng = _this$props$initialCe.lng;\n    _this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CurrentLocation, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords; //send location values to back end server\n\n            axios.post(\"http://localhost:3001/setlocation\", {\n              lat: coords.latitude,\n              lng: coords.longitude\n            });\n\n            _this2.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            }); // send current location to server\n\n          });\n        }\n      }\n\n      this.loadMap();\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = this.props.zoom;\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this3.map,\n          google: _this3.props.google,\n          mapCenter: _this3.state.currentLocation\n        });\n      });\n    }\n  }]);\n\n  return CurrentLocation;\n}(React.Component);\nexport default CurrentLocation;\nCurrentLocation.defaultProps = {\n  zoom: 13,\n  initialCenter: {\n    lat: -1,\n    lng: 1\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"sources":["/Users/graphene/Documents/Web Development/ProgProject2019Sem2/src/components/map.js"],"names":["React","ReactDOM","axios","mapStyles","map","position","width","height","CurrentLocation","style","Object","assign","renderChildren","props","initialCenter","lat","lng","state","currentLocation","prevProps","prevState","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","post","latitude","longitude","setState","mapRef","refs","node","findDOMNode","zoom","mapConfig","Map","children","Children","c","cloneElement","mapCenter","Component","defaultProps","visible"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\n\nconst mapStyles = {\n  map: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n};\n\nexport class CurrentLocation extends React.Component {\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return (\n      <div>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n  componentDidMount() {\n\n\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          //send location values to back end server\n          axios.post(\"http://localhost:3001/setlocation\" , {\n            lat: coords.latitude,\n            lng: coords.longitude\n          });\n\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n          \n          // send current location to server\n          \n\n        });\n      }\n    }\n    this.loadMap();\n\n  }\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n}\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 13,\n  initialCenter: {\n    lat: -1,\n    lng: 1\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\n"]},"metadata":{},"sourceType":"module"}