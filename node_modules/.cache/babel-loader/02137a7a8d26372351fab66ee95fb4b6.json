{"ast":null,"code":"import _classCallCheck from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/graphene/Documents/Web Development/ProgProject2019Sem2/src/components/mapContainer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport CurrentLocation from \"./map\";\nvar mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: true,\n      activeMarker: {},\n      selectedPlace: {},\n      cars: []\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3001/getcarswithdistance\").then(function (res) {\n        var tempArray = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          tempArray.push(res.data[i]);\n        }\n\n        _this2.setState(function (state) {\n          return {\n            cars: tempArray\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var markers = []; // console.log(\"car\" + this.state.cars);\n\n      var _loop = function _loop() {\n        var car = _this3.state.cars[i].car;\n        var distance = _this3.state.cars[i].distance.text;\n        markers.push( // console.log(\"car value\" + this.state.cars[i].car.lat),\n        React.createElement(Marker, {\n          position: {\n            lat: _this3.state.cars[i].car.lat,\n            lng: _this3.state.cars[i].car.lng\n          },\n          onClick: function onClick() {\n            return _this3.props.onShowDetail(car, distance);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      };\n\n      for (var i = 0; i < this.state.cars.length; i++) {\n        _loop();\n      }\n\n      return React.createElement(CurrentLocation, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, markers, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: \"current location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDEFtWHf9PNwDPk74kYTMLpYzDg8WB7n7Y\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/graphene/Documents/Web Development/ProgProject2019Sem2/src/components/mapContainer.jsx"],"names":["React","Component","axios","Map","GoogleApiWrapper","InfoWindow","Marker","CurrentLocation","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","cars","onMarkerClick","props","marker","e","setState","onClose","get","then","res","tempArray","i","data","length","push","markers","car","distance","text","lat","lng","onShowDetail","google","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport CurrentLocation from \"./map\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\nclass MapContainer extends Component {\n  state = {\n    showingInfoWindow: true,\n    activeMarker: {},\n    selectedPlace: {},\n    cars: []\n  };\n\n  componentWillMount() {\n    axios.get(\"http://localhost:3001/getcarswithdistance\").then(res => {\n      var tempArray = [];\n      for (var i = 0; i < res.data.length; i++) {\n        tempArray.push(res.data[i]);\n      }\n\n      this.setState(state => {\n        return { cars: tempArray };\n      });\n    });\n  }\n\n  render() {\n    var markers = [];\n    // console.log(\"car\" + this.state.cars);\n    for (var i = 0; i < this.state.cars.length; i++) {\n      const car = this.state.cars[i].car;\n      const distance = this.state.cars[i].distance.text;\n      markers.push(\n        // console.log(\"car value\" + this.state.cars[i].car.lat),\n\n        <Marker\n          position={{\n            lat: this.state.cars[i].car.lat,\n            lng: this.state.cars[i].car.lng\n          }}\n          onClick={() => this.props.onShowDetail(car, distance)}\n        />\n      );\n    }\n    return (\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        {markers}\n\n        <Marker onClick={this.onMarkerClick} name={\"current location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDEFtWHf9PNwDPk74kYTMLpYzDg8WB7n7Y\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}